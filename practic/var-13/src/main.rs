fn main() {
    let mut a:f32 = 3.4;
    let b:f32 = 4.6;
    println!(" x  y    f");
    let mut i = 0;
    while a <= b{
        println!("{:2} {:.1} {:.3}", i, a, get_value(a));
        a+=0.1;
        i +=1;
    }
}

fn get_value(x:f32)-> f32{
   let a:f32 = 2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901157383418793070215408914993488416750924476146066808226480016847741185374234544243710753907774499206955170276183860626133138458300075204493382656029760673711320070932870912744374704723069697720931014169283681902551510865746377211125238978442505695369677078544996996794686445490598793163688923009879312773617821542499922957635148220826989519366803318252886939849646510582093923982948879332036250944311730123819706841614039701983767932068328237646480429;
   let stepen = -(x*x)/2.0;
   return 20.0*a.powf(stepen);
}
